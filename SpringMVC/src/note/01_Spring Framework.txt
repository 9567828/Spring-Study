01_Spring Framework.txt

# 프레임워크

	- 프로젝트 개발에 효율적인 구조를 미리 만들어 놓은 것
	- 개발자들은 이미 완성된 구조에 빈칸을 채우는 형식으로 개발을 진행할 수 있다
	- 전체적인 구조에 신경을 덜 써도 되기 때문에 디자인 패턴을 제대로 이해하기 힘든
	  (저렴한)초보 개발자들도 프로젝트에 투입할 수 있다
	- 어느정도 수준 이상의 품질이 항상 보장된다

# 스프링 프레임워크

	- Java, JSP를 화용해 웹 애플리케이션 서버 개발을 쉽게 진행하기 위한 프레임워크
	- Java, JSP를 더운 효율적(객체지향적)으로 사용하기 위한 다양한 디자인 패턴 및 기능들을 미리 구현해 놓은 프레임워크
	- JSP 관련 책(JSP로 효율적으로 쓰는법)의 예제에서 시작된 프레임워크

# 스프링 프레임워크에 적용되어 있는 여러 기능들

	1. POJO (Plain Old Java Object)
		- JSP의 문법같은 복잡한 새로운 문법 사용을 지양한다
		- 백엔드에는 절대로 JSP 코드를 사용하지 않고 순수 JAVA를 사용해야 한다
		- 프로젝트에 익숙치 않은 별도의 API를 사용하지 않음으로써
		  개발자의 혼란을 최소화 해야 한다
 
	2. 의존성 주입 (DI, Dependency Injection)
		- 생성자는 유지보수를 어렵게 만드는 장애물이다.
		- 필요한 곳에 적절한 인스턴스를 외부에서 공급해줌으로써 생성자의 사용을 제거해야 한다
		- 의존성 주입을 통해 프로젝트 소스 코드간의 결합도를 낮출 수 있다
		  (결합도가 높은 상태 - 하나 수정하면 소스코드 100개 수정해야 하는 상태)

	3. MVC 디자인 패턴
		- 하나의 프로젝트를 구성하는 모든 코드들을 크게 세 종류로 분류하는 디자인 패턴
		- Model, View, Controller로 구성된다
		- Model : 데이터를 담아서 활용하기 위해 필요한 코드들 (dto)
		- View : 화면을 구성하기 위해 필요한 코드들 (웹으로 치면 .jsp)
		- Controller : 사용자가 원하는 처리를 진행하기 위해 필요한 코드들
					   (처리라는 것은 굉장히 다양하기 때문에 여러가지 분야로 분류될 수 있음) 

	
	4. 관점 지향형 프로그래밍 (AOP)
		- 여러개의 클래스에서 반복해서 사용하는 코드가 있을 때
		  해당 코드를 모듈화 하여 하나의 공통 관심사로 분리하는 프로그래밍 방법론
		- 스프링에서는 관점 지향형 프로그래밍을 지원하는 다양한 기능들을 제공한다

# 스프링 부트 프로젝트(Maven)의 기본 구조
	- src/main/java
	- src/main/resources
	- src/test/java
	- Maven Dependencies
	- src
	- mvnw
	- pom.xml
	- target
		
		
		
		
		